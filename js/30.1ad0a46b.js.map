{"version":3,"file":"js/30.1ad0a46b.js","mappings":"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","sources":["webpack://porc/./node_modules/vue-loader/dist/templateLoader.js","webpack://porc/./node_modules/vue-loader/dist/index.js","webpack://porc/./src/views/Home.vue"],"sourcesContent":["import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/imgs/nela.svg'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-65db3889\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"PoRC v1.7\")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"PoRC v1.7\")\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  center: \"\",\n  class: \"ion-text-center\"\n}, \"Perioperative Risk Calculator\", -1))\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Parsimonius NELA Model\")\nconst _hoisted_7 = { key: 2 }\nconst _hoisted_8 = {\n  key: 3,\n  class: \"bar ion-text-wrap\"\n}\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" This is \")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" open source\")\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\" software\")\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\"It uses the public NELA algorithm at data.nela.org.uk/riskcalculator \")\nconst _hoisted_15 = {\n  key: 4,\n  class: \"pass\"\n}\nconst _hoisted_16 = {\n  key: 5,\n  class: \"fail\"\n}\nconst _hoisted_17 = { key: 6 }\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \" As the self check failed, calculation is disabled. Please report this error to jp@lomas.doctor \", -1))\nconst _hoisted_19 = [\n  _hoisted_18\n]\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", { style: {\"text-align\":\"center\"} }, \"Â© 2023\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, { class: \"ion-text-center\" }, {\n                default: _withCtx(() => [\n                  _hoisted_1\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, { fullscreen: \"\" }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_header, { collapse: \"condense\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_toolbar, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_title, {\n                    size: \"large\",\n                    class: \"ion-text-center\"\n                  }, {\n                    default: _withCtx(() => [\n                      _hoisted_2\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n            default: _withCtx(() => [\n              _hoisted_3,\n              (_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" This app is for medical professionals. It is used to generate laparotomy mortality risk estimates using the Parsimonius NELA risk prediction model. \"))\n                : _createCommentVNode(\"\", true),\n              (_ctx.passedAll)\n                ? (_openBlock(), _createBlock(_component_ion_row, {\n                    key: 1,\n                    \"align-items-center\": \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, { class: \"ion-text-center\" }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"img\", {\n                            src: _imports_0,\n                            onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.goNela())),\n                            style: {\"max-width\":\"50%\"}\n                          }),\n                          _hoisted_5,\n                          _createVNode(_component_ion_button, {\n                            size: \"default\",\n                            onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.goNela()))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_6\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true),\n              (_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Â \"))\n                : _createCommentVNode(\"\", true),\n              (_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                    _createElementVNode(\"h1\", null, [\n                      _hoisted_9,\n                      _createElementVNode(\"strong\", null, [\n                        _createVNode(_component_ion_icon, { icon: _ctx.logoGithub }, null, 8, [\"icon\"]),\n                        _hoisted_10\n                      ]),\n                      _hoisted_11,\n                      _hoisted_12,\n                      _hoisted_13,\n                      _hoisted_14\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              (_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                    _createElementVNode(\"h1\", null, [\n                      _createVNode(_component_ion_icon, { icon: _ctx.checkmarkCircle }, null, 8, [\"icon\"]),\n                      _createTextVNode(\" PASSED app self-check [\" + _toDisplayString(_ctx.TestCasesRun) + \"/\" + _toDisplayString(_ctx.TestCasesRun) + \"] \", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              (!_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                    _createElementVNode(\"h1\", null, [\n                      _createVNode(_component_ion_icon, { icon: _ctx.closeCircle }, null, 8, [\"icon\"]),\n                      _createTextVNode(\" FAILED app self-check [\" + _toDisplayString(_ctx.PassedTests) + \"/\" + _toDisplayString(_ctx.TestCasesRun) + \" tests passed] \", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              (!_ctx.passedAll)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _hoisted_19))\n                : _createCommentVNode(\"\", true),\n              _hoisted_20\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue';\nimport {\n  IonButton,\n  IonCol,\n  IonIcon,\n  IonRow,\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n} from '@ionic/vue';\nimport { logoGithub, checkmarkCircle, closeCircle } from 'ionicons/icons';\nimport { Calculators } from '../components/calc';\nimport { store } from '../store';\nexport default defineComponent({\n  name: 'HomePage',\n  components: {\n    IonButton,\n    IonCol,\n    IonIcon,\n    IonRow,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n  },\n  setup() {\n    console.log('Performing self test...');\n\n    const calcService = new Calculators();\n    var TestCasesRun = 0,\n      PassedTests = 0;\n    var FloatSafeTest = function (a: any, b: any) {\n      return a * 100 === b * 100;\n    };\n    let TestData = {};\n    let ExpectedResult = 0;\n    // let ExpectedMorbidity = 0;\n    // let ExpectedMortality = 0;\n    let mortality: any = 0;\n    // let morbidity = 0;\n\n    TestData = {\n      age: 55,\n      asa: 5,\n      albumin: 55,\n      pulse: 55,\n      bp: 55,\n      urea: 5,\n      wcc: 5.5,\n      gcs: 15,\n      cancer: 8,\n      respiratory: 4,\n      cepod: 3,\n      soiling: 4,\n      indHaemorrhage: false,\n      indAbdominalWoundDehiscence: false,\n      indAbdominalCompartmentSyndrome: false,\n      indPlannedRelook: true,\n      indOther: false,\n      indTenderSmallBowelObstruction: false,\n      indNonTenderSmallBowelObstruction: false,\n      indTenderLargeBowelObstruction: false,\n      indNonTenderLargeBowelObstruction: false,\n      indGastricOutletObstruction: false,\n      indIncarceratedHernia: false,\n      indHiatusHernia: false,\n      indVolvulus: false,\n      indInternalHernia: false,\n      indObstructingIncisionalHernia: false,\n      indIntussusception: false,\n      indPseudoObstruction: false,\n      indForeignBody: false,\n      indPhlegmon: false,\n      indPneumoperitoneum: false,\n      indSepsisOther: false,\n      indIatrogenicInjury: false,\n      indAnastomoticLeak: false,\n      indPeritonitis: false,\n      indPerforation: false,\n      indAbdominalAbscess: false,\n      indIntestinalFistula: false,\n      indNecrosis: false,\n      indIschaemia: false,\n      indColitis: false,\n      indAcidosis: false,\n    };\n    ExpectedResult = 22.73;\n    mortality = calcService.NelaV2(TestData)?.mortality;\n    console.log(\n      'Test case ' +\n        (TestCasesRun + 1) +\n        ' result: ' +\n        mortality +\n        ' - Expected: ' +\n        ExpectedResult\n    );\n    if (FloatSafeTest(mortality, ExpectedResult)) {\n      PassedTests += 1;\n    }\n    TestCasesRun += 1;\n\n    TestData = {\n        \"age\": 87,\n        \"asa\": 5,\n        \"albumin\": 31,\n        \"pulse\": 98,\n        \"bp\": 134,\n        \"urea\": 2.3,\n        \"wcc\": 11.3,\n        \"gcs\": 13,\n        \"cancer\": 2,\n        \"respiratory\": 8,\n        \"cepod\": 8,\n        \"soiling\": 1,\n        \"indHaemorrhage\": true,\n        \"indAbdominalWoundDehiscence\": true,\n        \"indAbdominalCompartmentSyndrome\": false,\n        \"indPlannedRelook\": false,\n        \"indOther\": false,\n        \"indTenderSmallBowelObstruction\": false,\n        \"indNonTenderSmallBowelObstruction\": false,\n        \"indTenderLargeBowelObstruction\": false,\n        \"indNonTenderLargeBowelObstruction\": false,\n        \"indGastricOutletObstruction\": false,\n        \"indIncarceratedHernia\": false,\n        \"indHiatusHernia\": false,\n        \"indVolvulus\": false,\n        \"indInternalHernia\": false,\n        \"indObstructingIncisionalHernia\": false,\n        \"indIntussusception\": false,\n        \"indPseudoObstruction\": false,\n        \"indForeignBody\": false,\n        \"indPhlegmon\": false,\n        \"indPneumoperitoneum\": false,\n        \"indSepsisOther\": false,\n        \"indIatrogenicInjury\": true,\n        \"indAnastomoticLeak\": false,\n        \"indPeritonitis\": false,\n        \"indPerforation\": false,\n        \"indAbdominalAbscess\": false,\n        \"indIntestinalFistula\": false,\n        \"indNecrosis\": false,\n        \"indIschaemia\": false,\n        \"indColitis\": false,\n        \"indAcidosis\": false\n    }\n    ExpectedResult = 57.52;\n    mortality = calcService.NelaV2(TestData)?.mortality;\n    console.log(\n      'Test case ' +\n        (TestCasesRun + 1) +\n        ' result: ' +\n        mortality +\n        ' - Expected: ' +\n        ExpectedResult\n    );\n    if (FloatSafeTest(mortality, ExpectedResult)) {\n      PassedTests += 1;\n    }\n    TestCasesRun += 1;\n\n    /* older tests\n   // NELA CALCULATOR TESTS\n  TestData = JSON.parse('{\"asa\":1,\"gender\":2,\"creatinine\":\"132\",\"age\":\"43\",\"cardiac\":4,\"respiratory\":4,\"ecg\":2,\"bp\":\"125\",\"pulse\":\"54\",\"hb\":\"\",\"wcc\":8,\"urea\":2.4,\"sodium\":\"143\",\"potassium\":4.1,\"gcs\":1,\"severity\":4,\"number\":1,\"blood\":1,\"soiling\":2,\"cancer\":2,\"cepod\":2}');\n  ExpectedResult = 0.7;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"asa\":8,\"gender\":1,\"creatinine\":\"111\",\"age\":\"67\",\"cardiac\":2,\"respiratory\":2,\"ecg\":4,\"bp\":\"99\",\"pulse\":\"117\",\"hb\":\"\",\"wcc\":21.2,\"urea\":11.5,\"sodium\":\"100\",\"potassium\":10,\"gcs\":4,\"severity\":8,\"number\":4,\"blood\":4,\"soiling\":1,\"cancer\":4,\"cepod\":8}');\n  ExpectedResult = 78.1;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"asa\":16,\"gender\":2,\"creatinine\":\"1200\",\"age\":\"105\",\"cardiac\":8,\"respiratory\":8,\"ecg\":4,\"bp\":\"45\",\"pulse\":\"200\",\"hb\":\"\",\"wcc\":65,\"urea\":89,\"sodium\":\"178\",\"potassium\":1.1,\"gcs\":4,\"severity\":8,\"number\":4,\"blood\":8,\"soiling\":8,\"cancer\":8,\"cepod\":8}');\n  ExpectedResult = 99.9;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"asa\":8,\"gender\":1,\"creatinine\":\"128\",\"age\":\"77\",\"cardiac\":4,\"respiratory\":4,\"ecg\":4,\"bp\":\"102\",\"pulse\":\"102\",\"hb\":\"\",\"wcc\":5.4,\"urea\":7.8,\"sodium\":\"139\",\"potassium\":5.1,\"gcs\":1,\"severity\":4,\"number\":1,\"blood\":2,\"soiling\":8,\"cancer\":2,\"cepod\":2}');\n  ExpectedResult = 37.5;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"asa\":4,\"gender\":2,\"creatinine\":\"101\",\"age\":\"58\",\"cardiac\":4,\"respiratory\":8,\"ecg\":1,\"bp\":\"184\",\"pulse\":\"88\",\"hb\":\"\",\"wcc\":5.2,\"urea\":8.1,\"sodium\":\"148\",\"potassium\":4,\"gcs\":1,\"severity\":4,\"number\":2,\"blood\":1,\"soiling\":1,\"cancer\":1,\"cepod\":2}');\n  ExpectedResult = 6.3;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"age\":\"83\",\"asa\":2,\"gender\":2,\"cardiac\":1,\"respiratory\":2,\"ecg\":1,\"bp\":\"182\",\"pulse\":\"98\",\"wcc\":10.2,\"urea\":5.6,\"creatinine\":\"111\",\"sodium\":\"142\",\"potassium\":5.1,\"gcs\":2,\"severity\":4,\"number\":1,\"blood\":2,\"soiling\":4,\"cancer\":4,\"cepod\":8}');\n  ExpectedResult = 15.8;\n  mortality = calcService.calcNELA(TestData)?.mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + ' - Expected: ' + ExpectedResult);\n  if (FloatSafeTest(mortality,ExpectedResult)) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n   // P-POSSUM CALCULATOR TESTS\n  TestData = JSON.parse('{\"age\":1,\"cardiac\":2,\"respiratory\":4,\"ecg\":8,\"bp\":1,\"pulse\":1,\"hb\":1,\"wcc\":2,\"urea\":1,\"sodium\":1,\"potassium\":1,\"gcs\":1,\"severity\":1,\"number\":4,\"blood\":2,\"soiling\":2,\"cancer\":2,\"cepod\":8}');\n  ExpectedMorbidity = 82.3;\n  ExpectedMortality = 11.3;\n  morbidity = calcService.ppcalc(TestData, true).morbidity;\n  mortality = calcService.ppcalc(TestData, true).mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + '/' + morbidity + ' - Expected: ' + ExpectedMortality + '/' + ExpectedMorbidity);\n  if ((FloatSafeTest(mortality,ExpectedMortality)) && (FloatSafeTest(morbidity,ExpectedMorbidity))) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"age\":4,\"cardiac\":8,\"respiratory\":8,\"ecg\":8,\"bp\":8,\"pulse\":8,\"hb\":8,\"wcc\":4,\"urea\":8,\"sodium\":8,\"potassium\":8,\"gcs\":8,\"severity\":8,\"number\":8,\"blood\":8,\"soiling\":8,\"cancer\":8,\"cepod\":8}');\n  ExpectedMorbidity = 100;\n  ExpectedMortality = 100;\n  morbidity = calcService.ppcalc(TestData, true).morbidity;\n  mortality = calcService.ppcalc(TestData, true).mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + '/' + morbidity + ' - Expected: ' + ExpectedMortality + '/' + ExpectedMorbidity);\n  if ((FloatSafeTest(mortality,ExpectedMortality)) && (FloatSafeTest(morbidity,ExpectedMorbidity))) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"age\":2,\"cardiac\":8,\"respiratory\":1,\"ecg\":4,\"bp\":4,\"pulse\":4,\"hb\":2,\"wcc\":4,\"urea\":2,\"sodium\":1,\"potassium\":1,\"gcs\":4,\"severity\":4,\"number\":4,\"blood\":4,\"soiling\":4,\"cancer\":4,\"cepod\":4}');\n  ExpectedMorbidity = 99;\n  ExpectedMortality = 71.4;\n  morbidity = calcService.ppcalc(TestData, true).morbidity;\n  mortality = calcService.ppcalc(TestData, true).mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + '/' + morbidity + ' - Expected: ' + ExpectedMortality + '/' + ExpectedMorbidity);\n  if ((FloatSafeTest(mortality,ExpectedMortality)) && (FloatSafeTest(morbidity,ExpectedMorbidity))) { PassedTests+=1; }\n  TestCasesRun +=1;\n\n  TestData = JSON.parse('{\"age\":2,\"cardiac\":4,\"respiratory\":2,\"ecg\":4,\"bp\":2,\"pulse\":2,\"hb\":4,\"wcc\":2,\"urea\":8,\"sodium\":4,\"potassium\":1,\"gcs\":4,\"severity\":1,\"number\":8,\"blood\":1,\"soiling\":1,\"cancer\":8,\"cepod\":8}');\n  ExpectedMorbidity = 99.6;\n  ExpectedMortality = 84.8;\n  morbidity = calcService.ppcalc(TestData, true).morbidity;\n  mortality = calcService.ppcalc(TestData, true).mortality;\n  console.log('Test case ' + (TestCasesRun+1) + ' result: ' + mortality + '/' + morbidity + ' - Expected: ' + ExpectedMortality + '/' + ExpectedMorbidity);\n  if ((FloatSafeTest(mortality,ExpectedMortality)) && (FloatSafeTest(morbidity,ExpectedMorbidity))) { PassedTests+=1; }\n  TestCasesRun +=1;\n*/\n    let passedAll = false;\n\n    if (PassedTests === TestCasesRun) {\n      store.pass = true;\n      passedAll = true;\n      // PASS\n      // $scope.selftest = \"<div class=\\\"bar bar-balanced\\\"><h1 class=\\\"title\\\">Check status: OK [\" + PassedTests + \"/\" + TestCasesRun + \"]</h1></div>\";\n      // $scope.selftestBOOL = false;\n      console.log('self test = PASS');\n      //  this.selfCheck = { status: 'PASS', PassedTests, TestCasesRun };\n      //  calcService.selfCheck = true;\n    } else {\n      passedAll = false;\n\n      // FAIL\n      // $scope.selftest = \"<div class=\\\"bar bar-assertive\\\"><h1 class=\\\"title\\\">Check status: FAIL [\" + PassedTests + \"/\" + TestCasesRun + \"]</h1></div>\";\n      // $scope.selftestBOOL = true;\n      console.log('self test = FAIL');\n      //  this.selfCheck = { status: 'FAIL', PassedTests, TestCasesRun };\n    }\n    return {\n      logoGithub,\n      checkmarkCircle,\n      closeCircle,\n      passedAll,\n      PassedTests,\n      TestCasesRun,\n      store,\n    };\n  },\n  methods: {\n    goNela() {\n      this.$router.push('/tabs/nela');\n    },\n    goPPossum() {\n      this.$router.push('/tabs/p-possum');\n    },\n  },\n});\n","import { render } from \"./Home.vue?vue&type=template&id=65db3889&scoped=true&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=65db3889&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/travis/build/jplomas/LapRiskCalc/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65db3889\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_createElementVNode","center","class","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","style","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_button","_component_ion_col","_component_ion_row","_component_ion_icon","_component_ion_content","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","_","fullscreen","collapse","size","passedAll","_createElementBlock","_createCommentVNode","src","_imports_0","onClick","$event","goNela","icon","logoGithub","checkmarkCircle","_toDisplayString","TestCasesRun","closeCircle","PassedTests","defineComponent","name","components","IonButton","IonCol","IonIcon","IonRow","IonHeader","IonToolbar","IonTitle","IonContent","IonPage","setup","console","log","calcService","Calculators","FloatSafeTest","a","b","TestData","ExpectedResult","mortality","age","asa","albumin","pulse","bp","urea","wcc","gcs","cancer","respiratory","cepod","soiling","indHaemorrhage","indAbdominalWoundDehiscence","indAbdominalCompartmentSyndrome","indPlannedRelook","indOther","indTenderSmallBowelObstruction","indNonTenderSmallBowelObstruction","indTenderLargeBowelObstruction","indNonTenderLargeBowelObstruction","indGastricOutletObstruction","indIncarceratedHernia","indHiatusHernia","indVolvulus","indInternalHernia","indObstructingIncisionalHernia","indIntussusception","indPseudoObstruction","indForeignBody","indPhlegmon","indPneumoperitoneum","indSepsisOther","indIatrogenicInjury","indAnastomoticLeak","indPeritonitis","indPerforation","indAbdominalAbscess","indIntestinalFistula","indNecrosis","indIschaemia","indColitis","indAcidosis","NelaV2","store","methods","this","$router","push","goPPossum","__exports__"],"sourceRoot":""}
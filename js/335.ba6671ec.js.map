{"version":3,"file":"js/335.ba6671ec.js","mappings":"6HAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YACxCC,GAAwBD,EAAAA,EAAAA,IAAkB,cAEhD,OAAQE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaF,EAAuB,CAAEG,QAASX,EAAKY,gBAAkB,CAC1FC,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBC,EAAAA,EAAAA,IAAaT,EAAqB,CAChCU,KAAMhB,EAAKiB,SAAWjB,EAAKkB,KAAOlB,EAAKmB,MACvCC,KAAM,aACL,KAAM,EAAG,CAAC,YAEfC,EAAG,GACF,EAAG,CAAC,WACT,C,+BCTA,SAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,iBACNC,WAAY,CACVC,UAAS,KACTC,QAAOA,EAAAA,IAETC,KAAAA,GACE,MAAMC,GAAaC,EAAAA,EAAAA,KAEbZ,GAAWa,EAAAA,EAAAA,KAAS,IAAMF,EAAWG,SAErCnB,EAAiBA,KACrBgB,EAAWI,aAAa,EAG1B,MAAO,CACLf,WACAL,iBACAM,KAAI,MACJC,MAAKA,EAAAA,IAET,I,aCtBF,MAAMc,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASlC,KAEpE,G,iCCPM,MAAOmC,EACXC,kBAAAA,CAAmBC,GACjB,OAAkB,GAAXA,EAAe,EAAIA,CAC5B,CACAC,eAAAA,CAAgBC,GA8Cd,MAAMC,EAAqB,CACzBC,IAAKC,WAAWH,EAAKE,KACrBE,IAAKD,WAAWH,EAAKI,KACrBC,QAASF,WAAWH,EAAKK,SACzBC,GAAIH,WAAWH,EAAKM,IACpBC,MAAOJ,WAAWH,EAAKO,OACvBC,KAAML,WAAWH,EAAKQ,MACtBC,IAAKN,WAAWH,EAAKS,KACrBC,YAAaP,WAAWH,EAAKU,aAC7BC,IAAKR,WAAWH,EAAKW,KACrBC,MAAOT,WAAWH,EAAKY,OACvBC,QAASV,WAAWH,EAAKa,SACzBC,OAAQX,WAAWH,EAAKc,QACxBC,eAAgBf,EAAKe,eACrBC,4BAA6BhB,EAAKgB,4BAClCC,gCAAiCjB,EAAKiB,gCACtCC,iBAAkBlB,EAAKkB,iBACvBC,SAAUnB,EAAKmB,SACfC,+BAAgCpB,EAAKoB,+BACrCC,kCAAmCrB,EAAKqB,kCACxCC,+BAAgCtB,EAAKsB,+BACrCC,kCAAmCvB,EAAKuB,kCACxCC,4BAA6BxB,EAAKwB,4BAClCC,sBAAuBzB,EAAKyB,sBAC5BC,gBAAiB1B,EAAK0B,gBACtBC,YAAa3B,EAAK2B,YAClBC,kBAAmB5B,EAAK4B,kBACxBC,+BAAgC7B,EAAK6B,+BACrCC,mBAAoB9B,EAAK8B,mBACzBC,qBAAsB/B,EAAK+B,qBAC3BC,eAAgBhC,EAAKgC,eACrBC,YAAajC,EAAKiC,YAClBC,oBAAqBlC,EAAKkC,oBAC1BC,eAAgBnC,EAAKmC,eACrBC,oBAAqBpC,EAAKoC,oBAC1BC,mBAAoBrC,EAAKqC,mBACzBC,eAAgBtC,EAAKsC,eACrBC,eAAgBvC,EAAKuC,eACrBC,oBAAqBxC,EAAKwC,oBAC1BC,qBAAsBzC,EAAKyC,qBAC3BC,YAAa1C,EAAK0C,YAClBC,aAAc3C,EAAK2C,aACnBC,WAAY5C,EAAK4C,WACjBC,YAAa7C,EAAK6C,aAEpB,OAAO5C,CACT,CACA6C,MAAAA,CAAO9C,GACL,MAAM+C,GAAkB,QAClBC,EAAW,MACXC,EAAY,QACZC,EAAY,QACZC,EAAY,QACZC,GAAgB,OAChBC,GAAgB,OAChBC,GAAgB,OAChBC,GAAgB,OAChBC,EAAa,OACbC,GAAe,MACfC,GAAmB,OACnBC,EAAmB,MACnBC,EAAY,OACZC,EAAW,OACXC,EAAY,OACZC,EAA0B,OAC1BC,EAA4B,MAC5BC,EAAyB,OACzBC,EAAiC,MACjCC,EAAmC,OACnCC,EAAoB,OACpBC,EAAoB,KACpBC,EAAsB,OACtBC,EAAqB,OACrBC,EAAwB,MACxBC,EAAwB,OACxBC,EAA2B,OAC3BC,GAA2B,OAC3BC,EAAe,OAEfC,EAAU7E,EAAKE,IAAM,GAErB4E,EAAUC,KAAKC,IAAIhF,EAAKI,IAAK,GAE7B6E,EAAcF,KAAKG,IAAI,GAAIH,KAAKC,IAAI,GAAIhF,EAAKK,UAEnD,IAAI8E,EAAYJ,KAAKG,IAAI,IAAKH,KAAKC,IAAI,GAAIhF,EAAKO,QAChD4E,GAAwB,GAExB,IAAIC,EAAaL,KAAKG,IAAI,IAAKH,KAAKC,IAAI,GAAIhF,EAAKM,KACjD8E,GAA0B,IAE1B,IAAIC,EAAWN,KAAKO,IAAIP,KAAKC,IAAIhF,EAAKQ,KAAM,IAC5C6E,EAAWN,KAAKG,IAAI,IAAKH,KAAKC,IAAI,GAAKK,IACvCA,GAAsB,IAEtB,IAAIE,EAAUR,KAAKO,IAAItF,EAAKW,KAC5B4E,EAAUR,KAAKG,IAAI,IAAKH,KAAKC,IAAI,GAAKO,IACtCA,GAAoB,IAEpB,IAAIC,EAAS,EAEW,GAAtBxF,EAAKyF,eACe,GAApBzF,EAAK0C,aACgB,GAArB1C,EAAK2C,cACe,GAApB3C,EAAK6C,aACc,GAAnB7C,EAAK4C,WAEL4C,EAAS,EAEU,GAAnBxF,EAAK0F,YACe,GAApB1F,EAAKiC,aACuB,GAA5BjC,EAAKkC,qBACkB,GAAvBlC,EAAKmC,gBACuB,GAA5BnC,EAAKoC,qBACsB,GAA3BpC,EAAKqC,oBACkB,GAAvBrC,EAAKuC,gBACkB,GAAvBvC,EAAKsC,gBACuB,GAA5BtC,EAAKwC,qBACwB,GAA7BxC,EAAKyC,qBAEL+C,EAAS,EAEQ,GAAjBxF,EAAK2F,UACkC,GAAvC3F,EAAKoB,gCACqC,GAA1CpB,EAAKqB,mCACkC,GAAvCrB,EAAKsB,gCACqC,GAA1CtB,EAAKuB,mCAC+B,GAApCvB,EAAKwB,6BACyB,GAA9BxB,EAAKyB,uBACmB,GAAxBzB,EAAK0B,iBACe,GAApB1B,EAAK2B,aACqB,GAA1B3B,EAAK4B,mBACkC,GAAvC5B,EAAK6B,gCACsB,GAA3B7B,EAAK8B,oBACwB,GAA7B9B,EAAK+B,sBACkB,GAAvB/B,EAAKgC,eAELwD,EAAS,EAE2B,GAApCxF,EAAKgB,6BACmC,GAAxChB,EAAKiB,iCACoB,GAAzBjB,EAAKkB,kBACY,GAAjBlB,EAAKmB,SAELqE,EAAS,EACkB,GAAlBxF,EAAK4F,WAAyC,GAAvB5F,EAAKe,iBACrCyE,EAAS,GAIX,MAAMK,EAAa,CAAC,EAEpBA,EAAGC,IAAM9C,EAAW6B,EACpBgB,EAAGE,KAAO9C,GAAwB,GAAX6B,EAAe,EAAI,GAC1Ce,EAAGG,KAAO9C,GAAwB,GAAX4B,EAAe,EAAI,GAC1Ce,EAAGI,KAAO9C,GAAwB,GAAX2B,EAAe,EAAI,GAC1Ce,EAAGK,QAAU9C,GAA2B,GAAX0B,EAAe,EAAI,GAAKD,EACrDgB,EAAGM,QAAU9C,GAA2B,GAAXyB,EAAe,EAAI,GAAKD,EACrDgB,EAAGO,QAAU9C,GAA2B,GAAXwB,EAAe,EAAI,GAAKD,EACrDgB,EAAGQ,QAAU9C,EAAe0B,EAC5BY,EAAGS,MAAQ9C,EAAa2B,EACxBU,EAAGU,OAAS9C,EAAcsB,KAAKyB,IAAIrB,EAAW,GAC9CU,EAAGY,WAAa/C,EAAkB0B,EAClCS,EAAGa,YAAc/C,EAAmBoB,KAAKyB,IAAIpB,EAAY,GACzDS,EAAGc,KAAO/C,EAAYyB,EACtBQ,EAAGe,IAAM/C,EAAW0B,EACpBM,EAAGgB,KAAO/C,EAAYiB,KAAKyB,IAAIjB,EAAS,GAExCM,EAAGiB,MAAQ/C,GAAuC,IAAZ/D,EAAKS,IAAY,EAAI,GAC3DoF,EAAGkB,QACD/C,GAA6BhE,EAAKS,KAAO,GAAKT,EAAKS,KAAO,GAAK,EAAI,GACrEoF,EAAGmB,kBAAoB/C,GAAyC,GAAfjE,EAAKc,OAAc,EAAI,GACxE+E,EAAGoB,0BACD/C,GAAiD,GAAflE,EAAKc,OAAc,EAAI,GAC3D+E,EAAGqB,4BACD/C,GAAmD,GAAfnE,EAAKc,OAAc,EAAI,GAC7D+E,EAAGsB,aAAe/C,GAAyC,GAApBpE,EAAKU,YAAmB,EAAI,GACnEmF,EAAGuB,aAAe/C,GAAqBrE,EAAKU,aAAe,EAAI,EAAI,GACnEmF,EAAGwB,eAAiB/C,GAAqC,GAAdtE,EAAKY,MAAa,EAAI,GACjEiF,EAAGyB,cACD/C,GAA6D,GAAvCgD,KAAK1H,mBAAmBG,EAAKY,OAAc,EAAI,GACvEiF,EAAG2B,iBAAmBhD,GAAuC,GAAdxE,EAAKY,MAAa,EAAI,GACrEiF,EAAG4B,iBAAmBhD,GAAmC,GAAVe,EAAc,EAAI,GACjEK,EAAG6B,oBAAsBhD,GAAsC,GAAVc,EAAc,EAAI,GACvEK,EAAG8B,mBAAqBhD,GAAqC,GAAVa,EAAc,EAAI,GACrEK,EAAG+B,QAAUhD,GAAgC,GAAhB5E,EAAKa,QAAe,EAAI,GAErD,IAAIgH,EACF9E,EACA8C,EAAGC,IACHD,EAAGE,KACHF,EAAGG,KACHH,EAAGI,KACHJ,EAAGK,QACHL,EAAGM,QACHN,EAAGO,QACHP,EAAGQ,QACHR,EAAGS,MACHT,EAAGU,OACHV,EAAGY,WACHZ,EAAGa,YACHb,EAAGc,KACHd,EAAGe,IACHf,EAAGgB,KACHhB,EAAGiB,MACHjB,EAAGkB,QACHlB,EAAGmB,kBACHnB,EAAGoB,0BACHpB,EAAGqB,4BACHrB,EAAGsB,aACHtB,EAAGuB,aACHvB,EAAGwB,eACHxB,EAAGyB,cACHzB,EAAG2B,iBACH3B,EAAG4B,iBACH5B,EAAG6B,oBACH7B,EAAG8B,mBACH9B,EAAG+B,QAsCL,OApCAE,QAAQxC,IAAI,OAASO,EAAGC,KACxBgC,QAAQxC,IAAI,QAAUO,EAAGE,MACzB+B,QAAQxC,IAAI,QAAUO,EAAGG,MACzB8B,QAAQxC,IAAI,QAAUO,EAAGI,MACzB6B,QAAQxC,IAAI,WAAaO,EAAGK,SAC5B4B,QAAQxC,IAAI,aAAcO,EAAGM,SAC7B2B,QAAQxC,IAAI,WAAaO,EAAGO,SAC5B0B,QAAQxC,IAAI,WAAaO,EAAGQ,SAC5ByB,QAAQxC,IAAI,SAAWO,EAAGS,OAC1BwB,QAAQxC,IAAI,UAAYO,EAAGU,QAC3BuB,QAAQxC,IAAI,cAAgBO,EAAGY,YAC/BqB,QAAQxC,IAAI,eAAiBO,EAAGa,aAChCoB,QAAQxC,IAAI,QAAUO,EAAGc,MACzBmB,QAAQxC,IAAI,OAASO,EAAGe,KACxBkB,QAAQxC,IAAI,QAAUO,EAAGgB,MACzBiB,QAAQxC,IAAI,SAAWO,EAAGiB,OAC1BgB,QAAQxC,IAAI,WAAaO,EAAGkB,SAC5Be,QAAQxC,IAAI,qBAAuBO,EAAGmB,mBACtCc,QAAQxC,IAAI,6BAA+BO,EAAGoB,2BAC9Ca,QAAQxC,IACN,+BAAiCO,EAAGqB,6BAEtCY,QAAQxC,IAAI,gBAAkBO,EAAGsB,cACjCW,QAAQxC,IAAI,gBAAkBO,EAAGuB,cACjCU,QAAQxC,IAAI,kBAAoBO,EAAGwB,gBACnCS,QAAQxC,IAAI,iBAAmBO,EAAGyB,eAClCQ,QAAQxC,IAAI,oBAAsBO,EAAG2B,kBACrCM,QAAQxC,IAAI,oBAAsBO,EAAG4B,kBACrCK,QAAQxC,IAAI,uBAAyBO,EAAG6B,qBACxCI,QAAQxC,IAAI,sBAAwBO,EAAG8B,oBACvCG,QAAQxC,IAAI,WAAaO,EAAG+B,SAE5BC,EAAa9C,KAAKgD,IAAIF,IAAe,EAAI9C,KAAKgD,IAAIF,IAElDA,EAAa9C,KAAKiD,MAAmB,IAAbH,GAAsB,IAEvC,CACLI,UAAWJ,EACXhC,GAAIA,EACJqC,MAAO,CAAEC,OAAO,EAAOC,QAAS,UAEpC,CACAC,QAAAA,CAASrI,GAEP,MAAMsI,EAAcf,KAAKgB,cAAcvI,GACvC,IAAIsI,EAAYE,IAST,CAGL,MAAMC,EAAKC,SAAS1I,EAAK2I,YAAc,EAEvC,IAAIA,EAAa5D,KAAKO,IAAImD,GAEtBE,EAAa,IACfA,EAAa,GAEXA,EAAa,MACfA,EAAa,KAEf,MAAMC,GAAO,UAAaD,EAAa,GACjCE,EAAM,SAAY9D,KAAKyB,IAAImC,EAAa,EAAG,GACjDA,EAAaC,EAAMC,EAGnB,IAAIC,EAASJ,SAAS1I,EAAK8I,QACvBA,EAAS,MACXA,EAAS,KAEPA,EAAS,MACXA,EAAS,KAEX,MAAMC,GAAO,QAAYhE,KAAKyB,IAAIsC,EAAS,IAAK,GAC1CE,EACJ,QAAYjE,KAAKyB,IAAIsC,EAAS,IAAK,GAAK/D,KAAKO,IAAIwD,EAAS,KAC5DA,EAASC,EAAMC,EAGf,IAAI1I,EAAKoI,SAAS1I,EAAKM,IACnBA,EAAK,MACPA,EAAK,KAEHA,EAAK,KACPA,EAAK,IAEP,MAAM2I,GAAM,UAAa3I,EAAK,KACxB4I,EAAK,QAAYnE,KAAKyB,IAAIlG,EAAK,IAAK,GAC1CA,EAAK2I,EAAKC,EAGV,IAAI3I,EAAQmI,SAAS1I,EAAKO,OACtBA,EAAQ,MACVA,EAAQ,KAENA,EAAQ,KACVA,EAAQ,IAEV,MAAM4I,EAAK,UAAa5I,EAAQ,IAC1B6I,GAAM,QAAYrE,KAAKyB,IAAIjG,EAAQ,GAAI,GAC7CA,EAAQ4I,EAAKC,EAGb,IAAIzI,EAAMR,WAAWH,EAAKW,KACtBA,EAAM,OACRA,EAAM,MAEJA,EAAM,IACRA,EAAM,GAER,MAAM0I,GAAM,UAAa1I,EAAM,IACzB2I,EAAK,SAAYvE,KAAKyB,IAAI7F,EAAM,GAAI,GAC1CA,EAAM0I,EAAKC,EAGX,IAAI9I,EAAOL,WAAWH,EAAKQ,MAC3BA,EAAOuE,KAAKO,IAAI9E,GACZA,EAAO,MACTA,EAAO,KAELA,EAAO,IACTA,EAAO,GAET,MAAM+I,EAAK,UAAa/I,EAAO,KACzBgJ,GAAM,SAAYzE,KAAKyB,IAAIhG,EAAO,IAAK,GAC7CA,EAAO+I,EAAKC,EAGZ,IAAIC,EAAYtJ,WAAWH,EAAKyJ,WAC5BA,EAAY,MACdA,EAAY,KAEVA,EAAY,MACdA,EAAY,KAEd,MAAMC,GAAM,UAAaD,EAAY,GAC/BE,EAAK,SAAY5E,KAAKyB,IAAIiD,EAAY,EAAG,GAC/CA,EAAYC,EAAKC,EAMjB,IAAIvJ,EAAM,EACNwJ,EAAO,EACPC,EAAS,EACb,OAAQnB,SAAS1I,EAAKI,MACpB,KAAK,EACHyJ,EAAS,EACyB,GAA9BnB,SAAS1I,EAAKU,eAChBkJ,EAAO,UAELlB,SAAS1I,EAAKU,aAAe,IAC/BkJ,EAAO,WAET,MACF,KAAK,EACHC,EAAS,EACyB,GAA9BnB,SAAS1I,EAAKU,eAChBkJ,EAAO,UAELlB,SAAS1I,EAAKU,aAAe,IAC/BkJ,EAAO,WAET,MACF,KAAK,EACHC,EAAS,EACyB,GAA9BnB,SAAS1I,EAAKU,eAChBkJ,EAAO,UAELlB,SAAS1I,EAAKU,aAAe,IAC/BkJ,EAAO,UAET,MACF,KAAK,EACHC,EAAS,EACyB,GAA9BnB,SAAS1I,EAAKU,eAChBkJ,EAAO,oBAELlB,SAAS1I,EAAKU,aAAe,IAC/BkJ,EAAO,UAET,MACF,KAAK,GACHC,EAAS,EACyB,GAA9BnB,SAAS1I,EAAKU,eAChBkJ,EAAO,UAELlB,SAAS1I,EAAKU,aAAe,IAC/BkJ,EAAO,oBAET,MAKJ,IAAIE,EAAS,EACTC,EAAgB,EAEpB,OADA3J,EAAM,EACEyJ,GACN,KAAK,EACHC,GAAU,SACVC,GAAiB,QACjB3J,EAAM,UACN,MACF,KAAK,EACH0J,GAAU,SACVC,EAAgB,OAChB3J,EAAM,SACN,MACF,KAAK,EACH0J,GAAU,SACVC,EAAgB,MAChB3J,EAAM,UACN,MAEJ,MAAM4J,GAAM,SAAYF,IAAWpB,SAAS1I,EAAKE,KAAO,IAGlD+J,GACH,QAAYF,GAAiBhF,KAAKyB,IAAIkC,SAAS1I,EAAKE,KAAO,GAAI,GAC5DA,EAAM8J,EAAKC,EAGjB,IAAIC,EAAS,EACgB,GAAzBxB,SAAS1I,EAAKkK,UAChBA,EAAS,UAIX,IAAIC,EAAU,EACd,OAAQzB,SAAS1I,EAAKmK,UACpB,KAAK,EACHA,EAAU,SACV,MACF,KAAK,EACHA,EAAU,SACV,MACF,KAAK,EACHA,EAAU,SACV,MAIJ,IAAIrK,EAAU,EACd,OAAQ4I,SAAS1I,EAAKY,QACpB,KAAK,EACHd,GAAW,SACX,MACF,KAAK,EACHA,EAAU,SACV,MACF,KAAK,EACHA,EAAU,SACV,MAIJ,IAAIsK,EAAM,EACV,OAAQ1B,SAAS1I,EAAKoK,MACpB,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,SACN,MAIJ,IAAIC,EAAS,EACb,OAAQ3B,SAAS1I,EAAKqK,SACpB,KAAK,EACHA,GAAU,SACV,MACF,KAAK,EACHA,GAAU,SACV,MAIJ,IAAIC,EAAW,EACgB,GAA3B5B,SAAS1I,EAAKsK,YAChBA,EAAW,UAIb,IAAIC,EAAQ,EACZ,OAAQ7B,SAAS1I,EAAKuK,QACpB,KAAK,EACHA,EAAQ,SACR,MACF,KAAK,EACHA,EAAQ,SACR,MACF,KAAK,EACHA,GAAS,SACT,MAIJ,IAAI1J,EAAU,EACd,OAAQ6H,SAAS1I,EAAKa,UACpB,KAAK,EACHA,EAAU,SACV,MACF,KAAK,EACHA,GAAW,QACX,MACF,KAAK,EACHA,EAAU,SACV,MAIJ,IAAIC,EAAS,EACb,OAAQ4H,SAAS1I,EAAKc,SACpB,KAAK,EACHA,EAAS,SACT,MACF,KAAK,EACHA,EAAS,SACT,MACF,KAAK,EACHA,EAAS,SACT,MAIJ,IAAIL,EAAM,EACV,OAAQiI,SAAS1I,EAAKS,MACpB,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,SACN,MAGJqH,QAAQxC,IAAI,QAAUuE,EAAS,OAASzJ,GACxC0H,QAAQxC,IAAI,QAAUoD,SAAS1I,EAAKE,KAAO,OAASA,GACpD4H,QAAQxC,IAAI,aAAe4E,GAC3BpC,QAAQxC,IAAI,cAAgB6E,GAC5BrC,QAAQxC,IAAI,WAAasE,GACzB9B,QAAQxC,IAAI,UAAY8E,GACxBtC,QAAQxC,IAAI,SAAWhF,GACvBwH,QAAQxC,IAAI,YAAc/E,GAC1BuH,QAAQxC,IAAI,SAAWtF,EAAKwK,IAC5B1C,QAAQxC,IAAI,UAAY3E,GACxBmH,QAAQxC,IAAI,WAAa9E,GACzBsH,QAAQxC,IAAI,aAAewD,GAC3BhB,QAAQxC,IAAI,gBAAkBmE,GAC9B3B,QAAQxC,IAAI,UAAY7E,GACxBqH,QAAQxC,IAAI,eAAiBgF,GAC7BxC,QAAQxC,IAAI,aAAe+E,GAC3BvC,QAAQxC,IAAI,YAAciF,GAC1BzC,QAAQxC,IAAI,cAAgBzE,GAC5BiH,QAAQxC,IAAI,aAAexE,GAC3BgH,QAAQxC,IAAI,YAAcxF,GAC1BgI,QAAQxC,IAAI,iBAAmBqD,GAC/Bb,QAAQxC,IAAI,kCAEZ,IAAImF,GACD,UACDrK,EACAF,EACAgK,EACAC,EACAP,EACAQ,EACA9J,EACAC,EACAI,EACAH,EACAsI,EACAW,EACAhJ,EACA6J,EACAD,EACAE,EACA1J,EACAC,EACAhB,EACA6I,EACF8B,EAAgB1F,KAAKgD,IAAI0C,GACzBA,GAAiC,EAAIA,EAKrC,IAAIxC,EAAYwC,EAGhB,OAFAxC,EAAYlD,KAAKiD,MAAkB,IAAZC,GAAoB,GAC3CH,QAAQxC,IAAI,cAAgB2C,GACrB,CACLA,UAAWA,EACXC,MAAO,CAAEC,OAAO,EAAOC,QAAS,UAEpC,CA7VEN,QAAQxC,IAAI,OA8VhB,CACAiD,aAAAA,CAAcvI,GACZ,IAAIwI,GAAM,EACRkC,EAAM,GAIR,OADA5C,QAAQxC,IAAItF,EAAKE,UACAyK,IAAb3K,EAAKE,KAAkC,KAAbF,EAAKE,KACjCwK,EAAM,6BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKE,KAMfwI,SAAS1I,EAAKE,KAAO,IACvB4H,QAAQxC,IAAI,WACZoF,EACE,kHACFlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAEtBE,SAAS1I,EAAKE,KAAO,KACvB4H,QAAQxC,IAAI,YACZoF,EACE,gHACFlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAITmC,IAAb3K,EAAKI,KAAkC,KAAbJ,EAAKI,KACjCsK,EAAM,mCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAINmC,IAAhB3K,EAAKkK,QAAwC,KAAhBlK,EAAKkK,QACpCQ,EAAM,+BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAILmC,IAAjB3K,EAAKmK,SAA0C,KAAjBnK,EAAKmK,SACrCrC,QAAQxC,IAAI,oCACZoF,EAAM,mCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIDmC,IAArB3K,EAAKU,aAAkD,KAArBV,EAAKU,aACzCoH,QAAQxC,IAAI,wCACZoF,EAAM,uCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAITmC,IAAb3K,EAAKoK,KAAkC,KAAbpK,EAAKoK,KACjCtC,QAAQxC,IAAI,gCACZoF,EAAM,+BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIVmC,IAAZ3K,EAAKM,IAAgC,KAAZN,EAAKM,IAChCwH,QAAQxC,IAAI,+BACZoF,EAAM,8BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKM,IAKfoI,SAAS1I,EAAKM,IAAM,GACtBoK,EAAM,oCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIPmC,IAAf3K,EAAKO,OAAsC,KAAfP,EAAKO,OACnCuH,QAAQxC,IAAI,uCACZoF,EAAM,sCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKO,OAKfmI,SAAS1I,EAAKO,OAAS,GACzBmK,EAAM,2BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAITmC,IAAb3K,EAAKW,KAAkC,KAAbX,EAAKW,KACjCmH,QAAQxC,IAAI,gCACZoF,EAAM,4CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKW,KAKf+H,SAAS1I,EAAKW,KAAO,GACvB+J,EAAM,sCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIRmC,IAAd3K,EAAKQ,MAAoC,KAAdR,EAAKQ,MAClCsH,QAAQxC,IAAI,0CACZoF,EAAM,yCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKQ,MAKfkI,SAAS1I,EAAKQ,MAAQ,GACxBkK,EAAM,0BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIFmC,IAApB3K,EAAK2I,YAAgD,KAApB3I,EAAK2I,YACxC+B,EAAM,mCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAK2I,YAKfD,SAAS1I,EAAK2I,YAAc,GAC9B+B,EAAM,gCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAINmC,IAAhB3K,EAAK8I,QAAwC,KAAhB9I,EAAK8I,QACpChB,QAAQxC,IAAI,4CACZoF,EAAM,2CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAK8I,QAKfJ,SAAS1I,EAAK8I,QAAU,GAC1B4B,EAAM,4BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIHmC,IAAnB3K,EAAKyJ,WAA8C,KAAnBzJ,EAAKyJ,WACvC3B,QAAQxC,IAAI,+CACZoF,EAAM,8CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAErBE,SAAS1I,EAAKyJ,WAKff,SAAS1I,EAAKyJ,WAAa,GAC7BiB,EAAM,+BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAITmC,IAAb3K,EAAKS,KAAkC,KAAbT,EAAKS,KACjCqH,QAAQxC,IAAI,yCACZoF,EAAM,wCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAIJmC,IAAlB3K,EAAKsK,UAA4C,KAAlBtK,EAAKsK,UACtCxC,QAAQxC,IAAI,8CACZoF,EAAM,6CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAINmC,IAAhB3K,EAAKqK,QAAwC,KAAhBrK,EAAKqK,QACpCvC,QAAQxC,IAAI,gDACZoF,EAAM,+CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAEPmC,IAAf3K,EAAKuK,OAAsC,KAAfvK,EAAKuK,OACnCzC,QAAQxC,IAAI,sCACZoF,EAAM,qCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAELmC,IAAjB3K,EAAKa,SAA0C,KAAjBb,EAAKa,SACrCiH,QAAQxC,IAAI,yCACZoF,EAAM,wCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAENmC,IAAhB3K,EAAKc,QAAwC,KAAhBd,EAAKc,QACpCgH,QAAQxC,IAAI,yCACZoF,EAAM,wCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,SAEPmC,IAAf3K,EAAKY,OAAsC,KAAfZ,EAAKY,OACnCkH,QAAQxC,IAAI,8CACZoF,EAAM,6CACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,IAGnB,CAAEkC,IAAKA,EAAKlC,IAAKA,IA1DtBkC,EAAM,4BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApBxBkC,EAAM,yBACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApBxBkC,EAAM,6BACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KAnBxBkC,EAAM,uBACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApBxBkC,EAAM,mCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApBxBkC,EAAM,wBACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApBxBkC,EAAM,iCACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,KApExBkC,EAAM,sBACNlC,GAAM,EACC,CAAEkC,IAAKA,EAAKlC,IAAKA,GAsO5B,CACEoC,SAAAA,CAAU5K,EAAW6K,GACrB/C,QAAQxC,IAAIwF,KAAKC,UAAU/K,IAC3B,IAAIgL,EAAa,EACbC,EAAY,EACZJ,GACFG,EACEhL,EAAKE,IACLF,EAAKmK,QACLnK,EAAKU,YACLV,EAAKoK,IACLpK,EAAKM,GACLN,EAAKO,MACLP,EAAKS,IACLT,EAAKwK,GACLxK,EAAKW,IACLX,EAAKQ,KACLR,EAAK8I,OACL9I,EAAKyJ,UACPwB,EACEjL,EAAKsK,SACLtK,EAAKqK,OACLrK,EAAKuK,MACLvK,EAAKa,QACLb,EAAKc,OACLd,EAAKY,QAEPoK,EACEtC,SAAS1I,EAAKE,IAAK,IACnBwI,SAAS1I,EAAKmK,QAAS,IACvBzB,SAAS1I,EAAKU,YAAa,IAC3BgI,SAAS1I,EAAKoK,IAAK,IACnB1B,SAAS1I,EAAKM,GAAI,IAClBoI,SAAS1I,EAAKO,MAAO,IACrBmI,SAAS1I,EAAKS,IAAK,IACnBiI,SAAS1I,EAAKwK,GAAI,IAClB9B,SAAS1I,EAAKW,IAAK,IACnB+H,SAAS1I,EAAKQ,KAAM,IACpBkI,SAAS1I,EAAK8I,OAAQ,IACtBJ,SAAS1I,EAAKyJ,UAAW,IAC3BwB,EACEvC,SAAS1I,EAAKsK,SAAU,IACxB5B,SAAS1I,EAAKqK,OAAQ,IACtB3B,SAAS1I,EAAKuK,MAAO,IACrB7B,SAAS1I,EAAKa,QAAS,IACvB6H,SAAS1I,EAAKc,OAAQ,IACtB4H,SAAS1I,EAAKY,MAAO,KAGzBkH,QAAQxC,IAAI,sBAAwB0F,GACpClD,QAAQxC,IAAI,qBAAuB2F,GAEnC,IAAIC,EACF,GAAK,EAAI,EAAInG,KAAKgD,IAAY,IAAOiD,EAAd,KAA2B,IAAOC,IAC3DC,EAAYnG,KAAKiD,MAAkB,IAAZkD,GAAoB,GAC3CpD,QAAQxC,IAAI,eAAiB4F,EAAY,KAEzC,IAAIjD,EACF,GAAK,EAAI,EAAIlD,KAAKgD,IAAa,MAASiD,EAAjB,MAA8B,KAAQC,IAK/D,OAJAhD,EAAYlD,KAAKiD,MAAkB,IAAZC,GAAoB,GAC3CH,QAAQxC,IAAI,eAAiB2C,EAAY,KACzCH,QAAQxC,IAAI,cAAgB4F,GAC5BpD,QAAQxC,IAAI,cAAgB2C,GACrB,CAAEiD,YAAWjD,YACtB,CACAkD,MAAAA,CAAOnL,EAAW6K,GAChB/C,QAAQxC,IAAIwF,KAAKC,UAAU/K,IAC3B,IAAIgL,EAAa,EACbC,EAAY,EACZJ,GACFG,EACEhL,EAAKE,IACLF,EAAKmK,QACLnK,EAAKU,YACLV,EAAKoK,IACLpK,EAAKM,GACLN,EAAKO,MACLP,EAAKS,IACLT,EAAKwK,GACLxK,EAAKW,IACLX,EAAKQ,KACLR,EAAK8I,OACL9I,EAAKyJ,UACPwB,EACEjL,EAAKsK,SACLtK,EAAKqK,OACLrK,EAAKuK,MACLvK,EAAKa,QACLb,EAAKc,OACLd,EAAKY,QAEPoK,EACEzD,KAAK6D,WAAW1C,SAAS1I,EAAKE,IAAK,KACnCwI,SAAS1I,EAAKmK,QAAS,IACvBzB,SAAS1I,EAAKU,YAAa,IAC3BgI,SAAS1I,EAAKoK,IAAK,IACnB7C,KAAK8D,UAAU3C,SAAS1I,EAAKM,GAAI,KACjCiH,KAAK+D,aAAa5C,SAAS1I,EAAKO,MAAO,KACvCmI,SAAS1I,EAAKS,IAAK,IACnBiI,SAAS1I,EAAKwK,GAAI,IAClBjD,KAAKgE,WAAW7C,SAAS1I,EAAKW,IAAK,KACnC4G,KAAKiE,YAAY9C,SAAS1I,EAAKQ,KAAM,KACrC+G,KAAKkE,cAAc/C,SAAS1I,EAAK8I,OAAQ,KACzCvB,KAAKmE,iBAAiBhD,SAAS1I,EAAKyJ,UAAW,KACjDwB,EACEvC,SAAS1I,EAAKsK,SAAU,IACxB5B,SAAS1I,EAAKqK,OAAQ,IACtB3B,SAAS1I,EAAKuK,MAAO,IACrB7B,SAAS1I,EAAKa,QAAS,IACvB6H,SAAS1I,EAAKc,OAAQ,IACtByG,KAAKoE,eAAejD,SAAS1I,EAAKY,MAAO,MAG7CkH,QAAQxC,IAAI,sBAAwB0F,GACpClD,QAAQxC,IAAI,qBAAuB2F,GAEnC,IAAIC,EACF,GAAK,EAAI,EAAInG,KAAKgD,IAAY,IAAOiD,EAAd,KAA2B,IAAOC,IAC3DC,EAAYnG,KAAKiD,MAAkB,IAAZkD,GAAoB,GAC3CpD,QAAQxC,IAAI,eAAiB4F,EAAY,KAEzC,IAAIjD,EACF,GAAK,EAAI,EAAIlD,KAAKgD,IAAa,MAASiD,EAAjB,MAA8B,KAAQC,IAK/D,OAJAhD,EAAYlD,KAAKiD,MAAkB,IAAZC,GAAoB,GAC3CH,QAAQxC,IAAI,eAAiB2C,EAAY,KACzCH,QAAQxC,IAAI,cAAgB4F,GAC5BpD,QAAQxC,IAAI,cAAgB2C,GACrB,CAAEiD,YAAWjD,YACtB,CACAmD,UAAAA,CAAWlL,GACT,OAAIA,EAAM,GACD,EACEA,GAAO,IAAMA,GAAO,GACtB,EAEA,CAEX,CAEAmL,SAAAA,CAAU/K,GACR,OAAIA,EAAK,GACA,EACEA,EAAK,IACP,EACEA,EAAK,IACP,EACEA,GAAM,IACR,EACEA,GAAM,IACR,EAEA,CAEX,CAEAgL,YAAAA,CAAa/K,GACX,OAAIA,EAAQ,GACH,EACEA,EAAQ,GACV,EACEA,GAAS,GACX,EACEA,GAAS,IACX,EACEA,GAAS,IACX,EAEA,CAEX,CAEAgL,UAAAA,CAAW5K,GACT,OAAIA,GAAO,EACF,EACEA,GAAO,EACT,EACEA,GAAO,GACT,EACEA,GAAO,GACT,EAEA,CAEX,CAEA6K,WAAAA,CAAYhL,GACV,OAAIA,GAAQ,IACH,EACEA,GAAQ,GACV,EACEA,GAAQ,GACV,EAEA,CAEX,CAEAiL,aAAAA,CAAc3C,GACZ,OAAIA,GAAU,IACL,EACEA,GAAU,IACZ,EACEA,GAAU,IACZ,EAEA,CAEX,CAEA4C,gBAAAA,CAAiBjC,GACf,OAAIA,GAAa,IACR,EACEA,GAAa,IACf,EACEA,GAAa,IACf,EACEA,GAAa,EACf,EACEA,GAAa,IACf,EACEA,GAAa,IACf,EAEA,CAEX,CAEAmC,UAAAA,CAAWnL,GACT,OAAIA,GAAO,EACF,EACEA,GAAO,GACT,EACEA,GAAO,GACT,EAEA,CAEX,CAEAkL,cAAAA,CAAe7L,GACb,OAAe,GAAXA,EACK,EAEA,CAEX,E","sources":["webpack://porc/./src/components/DarkModeToggle.vue?adda","webpack://porc/./src/components/DarkModeToggle.vue?9da9","webpack://porc/./src/components/DarkModeToggle.vue","webpack://porc/./src/components/calc.ts"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n\n  return (_openBlock(), _createBlock(_component_ion_button, { onClick: _ctx.toggleDarkMode }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_icon, {\n        icon: _ctx.darkMode ? _ctx.moon : _ctx.sunny,\n        slot: \"icon-only\"\n      }, null, 8, [\"icon\"])\n    ]),\n    _: 1\n  }, 8, [\"onClick\"]))\n}","\nimport { defineComponent, computed } from 'vue';\nimport { IonButton, IonIcon } from '@ionic/vue';\nimport { moon, sunny } from 'ionicons/icons';\nimport { useThemeStore } from '@/store/theme';\n\nexport default defineComponent({\n  name: 'DarkModeToggle',\n  components: {\n    IonButton,\n    IonIcon,\n  },\n  setup() {\n    const themeStore = useThemeStore();\n    \n    const darkMode = computed(() => themeStore.isDark);\n    \n    const toggleDarkMode = () => {\n      themeStore.toggleTheme();\n    };\n\n    return {\n      darkMode,\n      toggleDarkMode,\n      moon,\n      sunny,\n    };\n  },\n});\n","import { render } from \"./DarkModeToggle.vue?vue&type=template&id=161b3898&ts=true\"\nimport script from \"./DarkModeToggle.vue?vue&type=script&lang=ts\"\nexport * from \"./DarkModeToggle.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export class Calculators {\n  ConvertNelaUrgency(urgency: any) {\n    return urgency == 4 ? 3 : urgency;\n  }\n  harmoniseParams(risk: any) {\n    type rH = {\n      age: number,\n      asa: number,\n      albumin: number,\n      bp: number,\n      pulse: number,\n      urea: number,\n      gcs: number,\n      respiratory: number,\n      wcc: number,\n      cepod: number,\n      soiling: number,\n      cancer: number,\n      indHaemorrhage: boolean,\n      indAbdominalWoundDehiscence: boolean,\n      indAbdominalCompartmentSyndrome: boolean,\n      indPlannedRelook: boolean,\n      indOther: boolean,\n      indTenderSmallBowelObstruction: boolean,\n      indNonTenderSmallBowelObstruction: boolean,\n      indTenderLargeBowelObstruction: boolean,\n      indNonTenderLargeBowelObstruction: boolean,\n      indGastricOutletObstruction: boolean,\n      indIncarceratedHernia: boolean,\n      indHiatusHernia: boolean,\n      indVolvulus: boolean,\n      indInternalHernia: boolean,\n      indObstructingIncisionalHernia: boolean,\n      indIntussusception: boolean,\n      indPseudoObstruction: boolean,\n      indForeignBody: boolean,\n      indPhlegmon: boolean,\n      indPneumoperitoneum: boolean,\n      indSepsisOther: boolean,\n      indIatrogenicInjury: boolean,\n      indAnastomoticLeak: boolean,\n      indPeritonitis: boolean,\n      indPerforation: boolean,\n      indAbdominalAbscess: boolean,\n      indIntestinalFistula: boolean,\n      indNecrosis: boolean,\n      indIschaemia: boolean,\n      indColitis: boolean,\n      indAcidosis: boolean,\n    };\n    const riskHarmonised: rH = {\n      age: parseFloat(risk.age),\n      asa: parseFloat(risk.asa),\n      albumin: parseFloat(risk.albumin),\n      bp: parseFloat(risk.bp),\n      pulse: parseFloat(risk.pulse),\n      urea: parseFloat(risk.urea),\n      gcs: parseFloat(risk.gcs),\n      respiratory: parseFloat(risk.respiratory),\n      wcc: parseFloat(risk.wcc),\n      cepod: parseFloat(risk.cepod),\n      soiling: parseFloat(risk.soiling),\n      cancer: parseFloat(risk.cancer),\n      indHaemorrhage: risk.indHaemorrhage,\n      indAbdominalWoundDehiscence: risk.indAbdominalWoundDehiscence,\n      indAbdominalCompartmentSyndrome: risk.indAbdominalCompartmentSyndrome,\n      indPlannedRelook: risk.indPlannedRelook,\n      indOther: risk.indOther,\n      indTenderSmallBowelObstruction: risk.indTenderSmallBowelObstruction,\n      indNonTenderSmallBowelObstruction: risk.indNonTenderSmallBowelObstruction,\n      indTenderLargeBowelObstruction: risk.indTenderLargeBowelObstruction,\n      indNonTenderLargeBowelObstruction: risk.indNonTenderLargeBowelObstruction,\n      indGastricOutletObstruction: risk.indGastricOutletObstruction,\n      indIncarceratedHernia: risk.indIncarceratedHernia,\n      indHiatusHernia: risk.indHiatusHernia,\n      indVolvulus: risk.indVolvulus,\n      indInternalHernia: risk.indInternalHernia,\n      indObstructingIncisionalHernia: risk.indObstructingIncisionalHernia,\n      indIntussusception: risk.indIntussusception,\n      indPseudoObstruction: risk.indPseudoObstruction,\n      indForeignBody: risk.indForeignBody,\n      indPhlegmon: risk.indPhlegmon,\n      indPneumoperitoneum: risk.indPneumoperitoneum,\n      indSepsisOther: risk.indSepsisOther,\n      indIatrogenicInjury: risk.indIatrogenicInjury,\n      indAnastomoticLeak: risk.indAnastomoticLeak,\n      indPeritonitis: risk.indPeritonitis,\n      indPerforation: risk.indPerforation,\n      indAbdominalAbscess: risk.indAbdominalAbscess,\n      indIntestinalFistula: risk.indIntestinalFistula,\n      indNecrosis: risk.indNecrosis,\n      indIschaemia: risk.indIschaemia,\n      indColitis: risk.indColitis,\n      indAcidosis: risk.indAcidosis,\n    };\n    return riskHarmonised;\n  }\n  NelaV2(risk: any) {\n    const coeffIntercept = -3.04678;\n    const coeffAge = 0.0666;\n    const coeffAsa3 = 1.13007;\n    const coeffAsa4 = 1.76293;\n    const coeffAsa5 = 2.55345;\n    const coeffAsa3Age = -0.03021;\n    const coeffAsa4Age = -0.03356;\n    const coeffAsa5Age = -0.04676;\n    const coeffAlbumin = -0.04323;\n    const coeffPulse = 0.01265;\n    const coeffPulse2 = -0.00012;\n    const coeffSystolicBP = -0.00683;\n    const coeffSystolicBP2 = 0.00011;\n    const coeffUrea = 0.38002;\n    const coeffWBC = 0.02041;\n    const coeffWBC2 = 0.24153;\n    const coeffGlasgowComaScore14 = 0.41557;\n    const coeffGlasgowComaScore3_13 = 0.6448;\n    const coeffMalignancyPrimary = 0.19201;\n    const coeffMalignancyNodalMetastases = 0.5061;\n    const coeffMalignancyDistantMetastases = 0.94309;\n    const coeffRespiratory2 = 0.35378;\n    const coeffRespiratory3 = 0.607;\n    const coeffUrgency6_18Hrs = 0.03782;\n    const coeffUrgency2_6Hrs = 0.14779;\n    const coeffUrgencyUnder2hrs = 0.5731;\n    const coeffIndicationSepsis = 0.02812;\n    const coeffIndicationIschaemia = 0.56948;\n    const coeffIndicationBleeding = -0.40615;\n    const coeffSoiling = 0.29453;\n\n    const ageCent = risk.age - 64;\n\n    const asaCent = Math.max(risk.asa, 2);\n\n    const albuminCent = Math.min(55, Math.max(10, risk.albumin));\n\n    let pulseCent = Math.min(145, Math.max(55, risk.pulse));\n    pulseCent = pulseCent - 91;\n\n    let systolicBP = Math.min(190, Math.max(70, risk.bp));\n    systolicBP = systolicBP - 127;\n\n    let ureaCent = Math.log(Math.max(risk.urea, 1));\n    ureaCent = Math.min(3.7, Math.max(0.5, ureaCent));\n    ureaCent = ureaCent - 1.9;\n\n    let wccCent = Math.log(risk.wcc);\n    wccCent = Math.min(3.6, Math.max(0.8, wccCent));\n    wccCent = wccCent - 2.4;\n\n    let maxInd = 0;\n    if (\n      risk.ind_ischaemia == 1 ||\n      risk.indNecrosis == 1 ||\n      risk.indIschaemia == 1 ||\n      risk.indAcidosis == 1 ||\n      risk.indColitis == 1\n    ) {\n      maxInd = 3; //Ischaemia\n    } else if (\n      risk.ind_sepsis == 1 ||\n      risk.indPhlegmon == 1 ||\n      risk.indPneumoperitoneum == 1 ||\n      risk.indSepsisOther == 1 ||\n      risk.indIatrogenicInjury == 1 ||\n      risk.indAnastomoticLeak == 1 ||\n      risk.indPerforation == 1 ||\n      risk.indPeritonitis == 1 ||\n      risk.indAbdominalAbscess == 1 ||\n      risk.indIntestinalFistula == 1\n    ) {\n      maxInd = 2; //Sepsis\n    } else if (\n      risk.ind_obst == 1 ||\n      risk.indTenderSmallBowelObstruction == 1 ||\n      risk.indNonTenderSmallBowelObstruction == 1 ||\n      risk.indTenderLargeBowelObstruction == 1 ||\n      risk.indNonTenderLargeBowelObstruction == 1 ||\n      risk.indGastricOutletObstruction == 1 ||\n      risk.indIncarceratedHernia == 1 ||\n      risk.indHiatusHernia == 1 ||\n      risk.indVolvulus == 1 ||\n      risk.indInternalHernia == 1 ||\n      risk.indObstructingIncisionalHernia == 1 ||\n      risk.indIntussusception == 1 ||\n      risk.indPseudoObstruction == 1 ||\n      risk.indForeignBody == 1\n    ) {\n      maxInd = 1; //Obstruction\n    } else if (\n      risk.indAbdominalWoundDehiscence == 1 ||\n      risk.indAbdominalCompartmentSyndrome == 1 ||\n      risk.indPlannedRelook == 1 ||\n      risk.indOther == 1\n    ) {\n      maxInd = 5; //Other\n    } else if (risk.ind_bleed == 1 || risk.indHaemorrhage == 1) {\n      maxInd = 4; //Bleeding\n    }\n\n    type eqRisk = Record<string, number>;\n    const eq: eqRisk = {};\n\n    eq.Age = coeffAge * ageCent;\n    eq.Asa3 = coeffAsa3 * (asaCent == 3 ? 1 : 0);\n    eq.Asa4 = coeffAsa4 * (asaCent == 4 ? 1 : 0);\n    eq.Asa5 = coeffAsa5 * (asaCent == 5 ? 1 : 0);\n    eq.Asa3Age = coeffAsa3Age * (asaCent == 3 ? 1 : 0) * ageCent;\n    eq.Asa4Age = coeffAsa4Age * (asaCent == 4 ? 1 : 0) * ageCent;\n    eq.Asa5Age = coeffAsa5Age * (asaCent == 5 ? 1 : 0) * ageCent;\n    eq.Albumin = coeffAlbumin * albuminCent;\n    eq.Pulse = coeffPulse * pulseCent;\n    eq.Pulse2 = coeffPulse2 * Math.pow(pulseCent, 2);\n    eq.SystolicBP = coeffSystolicBP * systolicBP;\n    eq.SystolicBP2 = coeffSystolicBP2 * Math.pow(systolicBP, 2);\n    eq.Urea = coeffUrea * ureaCent;\n    eq.WBC = coeffWBC * wccCent;\n    eq.WBC2 = coeffWBC2 * Math.pow(wccCent, 2);\n\n    eq.GCS14 = coeffGlasgowComaScore14 * (risk.gcs == 14 ? 1 : 0);\n    eq.GCS3_13 =\n      coeffGlasgowComaScore3_13 * (risk.gcs >= 3 && risk.gcs <= 13 ? 1 : 0);\n    eq.MalignancyPrimary = coeffMalignancyPrimary * (risk.cancer == 2 ? 1 : 0);\n    eq.MalignancyNodalMetastases =\n      coeffMalignancyNodalMetastases * (risk.cancer == 4 ? 1 : 0);\n    eq.MalignancyDistantMetastases =\n      coeffMalignancyDistantMetastases * (risk.cancer == 8 ? 1 : 0);\n    eq.Respiratory2 = coeffRespiratory2 * (risk.respiratory == 2 ? 1 : 0);\n    eq.Respiratory3 = coeffRespiratory3 * (risk.respiratory >= 4 ? 1 : 0);\n    eq.Urgency6_18Hrs = coeffUrgency6_18Hrs * (risk.cepod == 2 ? 1 : 0);\n    eq.Urgency2_6Hrs =\n      coeffUrgency2_6Hrs * (this.ConvertNelaUrgency(risk.cepod) == 3 ? 1 : 0); // Value of 4 in database is 3 in the calculation hence need for ConvertNelaUrgency\n    eq.UrgencyUnder2hrs = coeffUrgencyUnder2hrs * (risk.cepod == 8 ? 1 : 0);\n    eq.IndicationSepsis = coeffIndicationSepsis * (maxInd == 2 ? 1 : 0);\n    eq.IndicationIschaemia = coeffIndicationIschaemia * (maxInd == 3 ? 1 : 0);\n    eq.IndicationBleeding = coeffIndicationBleeding * (maxInd == 4 ? 1 : 0);\n    eq.Soiling = coeffSoiling * (risk.soiling == 8 ? 1 : 0);\n\n    let nelaRiskV2 =\n      coeffIntercept +\n      eq.Age +\n      eq.Asa3 +\n      eq.Asa4 +\n      eq.Asa5 +\n      eq.Asa3Age +\n      eq.Asa4Age +\n      eq.Asa5Age +\n      eq.Albumin +\n      eq.Pulse +\n      eq.Pulse2 +\n      eq.SystolicBP +\n      eq.SystolicBP2 +\n      eq.Urea +\n      eq.WBC +\n      eq.WBC2 +\n      eq.GCS14 +\n      eq.GCS3_13 +\n      eq.MalignancyPrimary +\n      eq.MalignancyNodalMetastases +\n      eq.MalignancyDistantMetastases +\n      eq.Respiratory2 +\n      eq.Respiratory3 +\n      eq.Urgency6_18Hrs +\n      eq.Urgency2_6Hrs +\n      eq.UrgencyUnder2hrs +\n      eq.IndicationSepsis +\n      eq.IndicationIschaemia +\n      eq.IndicationBleeding +\n      eq.Soiling;\n\n    console.log('Age=' + eq.Age);\n    console.log('Asa3=' + eq.Asa3);\n    console.log('Asa4=' + eq.Asa4);\n    console.log('Asa5=' + eq.Asa5);\n    console.log('Asa3Age=' + eq.Asa3Age);\n    console.log('Asa4Age\t=' + eq.Asa4Age);\n    console.log('Asa5Age=' + eq.Asa5Age);\n    console.log('Albumin=' + eq.Albumin);\n    console.log('Pulse=' + eq.Pulse);\n    console.log('Pulse2=' + eq.Pulse2);\n    console.log('SystolicBP=' + eq.SystolicBP);\n    console.log('SystolicBP2=' + eq.SystolicBP2);\n    console.log('Urea=' + eq.Urea);\n    console.log('WBC=' + eq.WBC);\n    console.log('WBC2=' + eq.WBC2);\n    console.log('GCS14=' + eq.GCS14);\n    console.log('GCS3_13=' + eq.GCS3_13);\n    console.log('MalignancyPrimary=' + eq.MalignancyPrimary);\n    console.log('MalignancyNodalMetastases=' + eq.MalignancyNodalMetastases);\n    console.log(\n      'MalignancyDistantMetastases=' + eq.MalignancyDistantMetastases\n    );\n    console.log('Respiratory2=' + eq.Respiratory2);\n    console.log('Respiratory3=' + eq.Respiratory3);\n    console.log('Urgency6_18Hrs=' + eq.Urgency6_18Hrs);\n    console.log('Urgency2_6Hrs=' + eq.Urgency2_6Hrs);\n    console.log('UrgencyUnder2hrs=' + eq.UrgencyUnder2hrs);\n    console.log('IndicationSepsis=' + eq.IndicationSepsis);\n    console.log('IndicationIschaemia=' + eq.IndicationIschaemia);\n    console.log('IndicationBleeding=' + eq.IndicationBleeding);\n    console.log('Soiling=' + eq.Soiling);\n\n    nelaRiskV2 = Math.exp(nelaRiskV2) / (1 + Math.exp(nelaRiskV2));\n\n    nelaRiskV2 = Math.round(nelaRiskV2 * 10000) / 100;\n\n    return {\n      mortality: nelaRiskV2,\n      eq: eq,\n      error: { state: false, message: 'PASSED' },\n    };\n  }\n  calcNELA(risk: any) {\n    // check parameters\n    const sanityCheck = this.NELADATACHECK(risk);\n    if (sanityCheck.err) {\n      // error with parameters\n      // let alert = this.alerCtrl.create({\n      //   title: 'Error',\n      //   message: sanityCheck.erm,\n      //   buttons: ['Ok']\n      // });\n      // alert.present();\n      console.log('TODO');\n    } else {\n      // now do the adjustments...\n      // creatinine\n      const cr = parseInt(risk.creatinine) + 1; // get this from form\n      // log('*Creatinine from form* ' + risk.creatinine);\n      let creatinine = Math.log(cr);\n      // log('*log of creatinine = ' + creatinine + '*');\n      if (creatinine > 6) {\n        creatinine = 6;\n      }\n      if (creatinine < 3.3) {\n        creatinine = 3.3;\n      }\n      const cr1 = -0.3093507 * (creatinine - 4);\n      const cr2 = 0.2428102 * Math.pow(creatinine - 4, 2);\n      creatinine = cr1 + cr2;\n\n      // sodium\n      let sodium = parseInt(risk.sodium); // get this from form\n      if (sodium > 148) {\n        sodium = 148;\n      }\n      if (sodium < 124) {\n        sodium = 124;\n      }\n      const na1 = -0.0007271 * Math.pow(sodium - 123, 3);\n      const na2 =\n        0.0002304 * Math.pow(sodium - 123, 3) * Math.log(sodium - 123);\n      sodium = na1 + na2;\n\n      // bp\n      let bp = parseInt(risk.bp); // get this from form\n      if (bp > 190) {\n        bp = 190;\n      }\n      if (bp < 70) {\n        bp = 70;\n      }\n      const b1 = -0.0090343 * (bp - 127);\n      const b2 = 0.0001137 * Math.pow(bp - 127, 2);\n      bp = b1 + b2;\n\n      // pulse\n      let pulse = parseInt(risk.pulse); // get this from form\n      if (pulse > 145) {\n        pulse = 145;\n      }\n      if (pulse < 55) {\n        pulse = 55;\n      }\n      const p1 = 0.0132113 * (pulse - 91);\n      const p2 = -0.0001264 * Math.pow(pulse - 91, 2);\n      pulse = p1 + p2;\n\n      // wcc\n      let wcc = parseFloat(risk.wcc); // get this from form\n      if (wcc > 42.7) {\n        wcc = 42.7;\n      }\n      if (wcc < 1) {\n        wcc = 1;\n      }\n      const w1 = -0.0072917 * (wcc - 13);\n      const w2 = 0.0013263 * Math.pow(wcc - 13, 2);\n      wcc = w1 + w2;\n\n      // urea\n      let urea = parseFloat(risk.urea); // get this from form\n      urea = Math.log(urea);\n      if (urea > 3.7) {\n        urea = 3.7;\n      }\n      if (urea < 0) {\n        urea = 0;\n      }\n      const u1 = 0.4227387 * (urea - 1.9);\n      const u2 = -0.0542346 * Math.pow(urea - 1.9, 2);\n      urea = u1 + u2;\n\n      // potassium\n      let potassium = parseFloat(risk.potassium); // get this from form\n      if (potassium > 5.9) {\n        potassium = 5.9;\n      }\n      if (potassium < 2.8) {\n        potassium = 2.8;\n      }\n      const k1 = -0.0994759 * (potassium - 4);\n      const k2 = 0.1699467 * Math.pow(potassium - 4, 2);\n      potassium = k1 + k2;\n\n      // now display grabbed data from form\n\n      // asa into numbers (for other lookups)\n      // resp here too...\n      let asa = 1;\n      let resp = 0;\n      let asanum = 0;\n      switch (parseInt(risk.asa)) {\n        case 1:\n          asanum = 1;\n          if (parseInt(risk.respiratory) == 2) {\n            resp = 0.5395227;\n          }\n          if (parseInt(risk.respiratory) > 3) {\n            resp = 1.2601628;\n          }\n          break;\n        case 2:\n          asanum = 2;\n          if (parseInt(risk.respiratory) == 2) {\n            resp = 0.5395227;\n          }\n          if (parseInt(risk.respiratory) > 3) {\n            resp = 1.2601628;\n          }\n          break;\n        case 4:\n          asanum = 3;\n          if (parseInt(risk.respiratory) == 2) {\n            resp = 0.5395227 + -0.1807609;\n          }\n          if (parseInt(risk.respiratory) > 3) {\n            resp = 1.2601628 + -0.5437609;\n          }\n          break;\n        case 8:\n          asanum = 4;\n          if (parseInt(risk.respiratory) == 2) {\n            resp = 0.5395227 + -0.3157025;\n          }\n          if (parseInt(risk.respiratory) > 3) {\n            resp = 1.2601628 + -0.868804;\n          }\n          break;\n        case 16:\n          asanum = 5;\n          if (parseInt(risk.respiratory) == 2) {\n            resp = 0.5395227 + -0.3012922;\n          }\n          if (parseInt(risk.respiratory) > 3) {\n            resp = 1.2601628 + -0.9052032;\n          }\n          break;\n      }\n\n      // age correction, from lookup table, for ASA 3-5 (it's 0 for 1-2):\n      // asa factor done here for speed too...\n      let lookup = 0;\n      let second_lookup = 0;\n      asa = 0;\n      switch (asanum) {\n        case 3:\n          lookup = -0.0235901;\n          second_lookup = -0.0001441;\n          asa = 1.0573609;\n          break;\n        case 4:\n          lookup = -0.0276586;\n          second_lookup = 0.0000669;\n          asa = 1.854601;\n          break;\n        case 5:\n          lookup = -0.0337041;\n          second_lookup = 0.00025;\n          asa = 2.6489194;\n          break;\n      }\n      const a1 = (0.0572932 + lookup) * (parseInt(risk.age) - 64);\n\n      // now do 2nd age lookup\n      const a2 =\n        (0.0001274 + second_lookup) * Math.pow(parseInt(risk.age) - 64, 2);\n      const age = a1 + a2;\n\n      // gender\n      let gender = 0; // male default, 0\n      if (parseInt(risk.gender) == 1) {\n        gender = 0.0280548;\n      } // females have this factor\n\n      // cardiac\n      let cardiac = 0;\n      switch (parseInt(risk.cardiac)) {\n        case 2:\n          cardiac = 0.1054722;\n          break;\n        case 4:\n          cardiac = 0.2655433;\n          break;\n        case 8:\n          cardiac = 0.3017798;\n          break;\n      }\n\n      // urgency/CEPOD\n      let urgency = 0;\n      switch (parseInt(risk.cepod)) {\n        case 2:\n          urgency = -0.0617987;\n          break;\n        case 4:\n          urgency = 0.0787992;\n          break;\n        case 8:\n          urgency = 0.4708663;\n          break;\n      }\n\n      // ECG\n      let ecg = 0;\n      switch (parseInt(risk.ecg)) {\n        case 2:\n          ecg = 0.3375291;\n          break;\n        case 4:\n          ecg = 0.1411111;\n          break;\n      }\n\n      // Number of ops\n      let number = 0;\n      switch (parseInt(risk.number)) {\n        case 2:\n          number = -0.2888454;\n          break;\n        case 4:\n          number = -0.1316191;\n          break;\n      }\n\n      // severity - only if Major+\n      let severity = 0;\n      if (parseInt(risk.severity) == 8) {\n        severity = 0.2043578;\n      }\n\n      // blood\n      let blood = 0;\n      switch (parseInt(risk.blood)) {\n        case 2:\n          blood = 0.0563362;\n          break;\n        case 4:\n          blood = 0.3148512;\n          break;\n        case 8:\n          blood = -0.0278452;\n          break;\n      }\n\n      // soiling\n      let soiling = 0;\n      switch (parseInt(risk.soiling)) {\n        case 2:\n          soiling = 0.1727508;\n          break;\n        case 4:\n          soiling = -0.083714;\n          break;\n        case 8:\n          soiling = 0.4387634;\n          break;\n      }\n\n      // cancer\n      let cancer = 0;\n      switch (parseInt(risk.cancer)) {\n        case 2:\n          cancer = 0.0332072;\n          break;\n        case 4:\n          cancer = 0.3666088;\n          break;\n        case 8:\n          cancer = 0.9988459;\n          break;\n      }\n\n      // gcs\n      let gcs = 0;\n      switch (parseInt(risk.gcs)) {\n        case 2:\n          gcs = 0.6355512;\n          break;\n        case 4:\n          gcs = 0.7842625;\n          break;\n      }\n\n      console.log('`ASA(' + asanum + '):` ' + asa);\n      console.log('`AGE(' + parseInt(risk.age) + '):` ' + age);\n      console.log('`GENDER`: ' + gender);\n      console.log('`CARDIAC:` ' + cardiac);\n      console.log('`RESP:` ' + resp);\n      console.log('`ECG:` ' + ecg);\n      console.log('`BP:` ' + bp);\n      console.log('`PULSE:` ' + pulse);\n      console.log('`HB:` ' + risk.hb);\n      console.log('`WCC:` ' + wcc);\n      console.log('`UREA:` ' + urea);\n      console.log('`SODIUM:` ' + sodium);\n      console.log('`POTASSIUM:` ' + potassium);\n      console.log('`GCS:` ' + gcs);\n      console.log('`SEVERITY:` ' + severity);\n      console.log('`NUMBER:` ' + number);\n      console.log('`BLOOD:` ' + blood);\n      console.log('`SOILING:` ' + soiling);\n      console.log('`CANCER:` ' + cancer);\n      console.log('`CEPOD:` ' + urgency);\n      console.log('`CREATININE:` ' + creatinine);\n      console.log('NELA year 2 factor: -0.0388465');\n\n      let section_three =\n        -4.3488269 +\n        asa +\n        age +\n        gender +\n        cardiac +\n        resp +\n        ecg +\n        bp +\n        pulse +\n        wcc +\n        urea +\n        sodium +\n        potassium +\n        gcs +\n        severity +\n        number +\n        blood +\n        soiling +\n        cancer +\n        urgency +\n        creatinine;\n      section_three = Math.exp(section_three);\n      section_three = section_three / (1 + section_three);\n\n      // log(' ');\n      // log(' ');\n      // log('`Final Risk %age:` _' + section_three + '_');\n      let mortality = section_three;\n      mortality = Math.round(mortality * 1000) / 10;\n      console.log('mortality: ' + mortality);\n      return {\n        mortality: mortality,\n        error: { state: false, message: 'PASSED' },\n      };\n    }\n  }\n  NELADATACHECK(risk: any) {\n    let err = false,\n      erm = '';\n\n    // AGE VALIDATION\n    console.log(risk.age);\n    if (risk.age === undefined || risk.age === '') {\n      erm = 'You forgot to enter an age';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.age)) {\n      erm = 'Age is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    // Were aged between 18 and 105 years.\n    if (parseInt(risk.age) < 18) {\n      console.log('Age <18');\n      erm =\n        'The NELA calculator is not validated in patients under 18 years of age. A risk calculation cannot be performed.';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.age) > 105) {\n      console.log('Age >105');\n      erm =\n        'The NELA calculator is not validated in patients aged over 105 years. A risk calculation cannot be performed.';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // ASA VALIDATION\n    if (risk.asa === undefined || risk.asa === '') {\n      erm = 'You forgot to enter an ASA grade';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // GENDER VALIDATION\n    if (risk.gender === undefined || risk.gender === '') {\n      erm = 'You forgot to enter a gender';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // CARDIAC VALIDATION\n    if (risk.cardiac === undefined || risk.cardiac === '') {\n      console.log('You forgot to enter cardiac data');\n      erm = 'You forgot to enter cardiac data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // RESPIRATORY VALIDATION\n    if (risk.respiratory === undefined || risk.respiratory === '') {\n      console.log('You forgot to enter respiratory data');\n      erm = 'You forgot to enter respiratory data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // ECG VALIDATION\n    if (risk.ecg === undefined || risk.ecg === '') {\n      console.log('You forgot to enter ECG data');\n      erm = 'You forgot to enter ECG data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // BLOOD PRESSURE VALIDATION - the calculator itself handles excessively high/low numbers\n    if (risk.bp === undefined || risk.bp === '') {\n      console.log('You forgot to enter BP data');\n      erm = 'You forgot to enter BP data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.bp)) {\n      erm = 'Blood pressure is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.bp) < 0) {\n      erm = 'Blood pressure cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // PULSE VALIDATION - the calculator itself handles excessively high/low numbers\n    if (risk.pulse === undefined || risk.pulse === '') {\n      console.log('You forgot to enter pulse rate data');\n      erm = 'You forgot to enter pulse rate data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.pulse)) {\n      erm = 'Pulse is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.pulse) < 0) {\n      erm = 'Pulse cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // WCC VALIDATION - the calculator itself handles excessively high/low numbers\n    if (risk.wcc === undefined || risk.wcc === '') {\n      console.log('You forgot to enter WCC data');\n      erm = 'You forgot to enter White Cell Count data';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.wcc)) {\n      erm = 'White Cell Count is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.wcc) < 0) {\n      erm = 'White Cell Count cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // UREA VALIDATION - the calculator itself handles excessively high/low numbers\n    if (risk.urea === undefined || risk.urea === '') {\n      console.log('You forgot to enter urea concentration');\n      erm = 'You forgot to enter urea concentration';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.urea)) {\n      erm = 'Urea is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.urea) < 0) {\n      erm = 'Urea cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // CREATININE VALIDATION - the calculator itself handles excessively high/low numbers\n    if (risk.creatinine === undefined || risk.creatinine === '') {\n      erm = 'You forgot to enter a creatinine';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.creatinine)) {\n      erm = 'Creatinine is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.creatinine) < 0) {\n      erm = 'Creatinine cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // SODIUM VALIDATION\n    if (risk.sodium === undefined || risk.sodium === '') {\n      console.log('You forgot to enter sodium concentration');\n      erm = 'You forgot to enter sodium concentration';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.sodium)) {\n      erm = 'Sodium is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.sodium) < 0) {\n      erm = 'Sodium cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // POTASSIUM VALIDATION\n    if (risk.potassium === undefined || risk.potassium === '') {\n      console.log('You forgot to enter potassium concentration');\n      erm = 'You forgot to enter potassium concentration';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (!parseInt(risk.potassium)) {\n      erm = 'Potassium is not a number';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (parseInt(risk.potassium) < 0) {\n      erm = 'Potassium cannot be negative';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // GCS VALIDATION\n    if (risk.gcs === undefined || risk.gcs === '') {\n      console.log(\"You forgot to enter the patient's GCS\");\n      erm = \"You forgot to enter the patient's GCS\";\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // SEVERITY VALIDATION\n    if (risk.severity === undefined || risk.severity === '') {\n      console.log('You forgot to enter the operative severity');\n      erm = 'You forgot to enter the operative severity';\n      err = true;\n      return { erm: erm, err: err };\n    }\n\n    // NUMBER OF PROCEDURE VALIDATION\n    if (risk.number === undefined || risk.number === '') {\n      console.log('You forgot to enter the number of procedures');\n      erm = 'You forgot to enter the number of procedures';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (risk.blood === undefined || risk.blood === '') {\n      console.log('You forgot to enter the blood loss');\n      erm = 'You forgot to enter the blood loss';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (risk.soiling === undefined || risk.soiling === '') {\n      console.log('You forgot to enter degree of soiling');\n      erm = 'You forgot to enter degree of soiling';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (risk.cancer === undefined || risk.cancer === '') {\n      console.log('You forgot to enter the cancer status');\n      erm = 'You forgot to enter the cancer status';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    if (risk.cepod === undefined || risk.cepod === '') {\n      console.log('You forgot to enter the urgency of surgery');\n      erm = 'You forgot to enter the urgency of surgery';\n      err = true;\n      return { erm: erm, err: err };\n    }\n    // should return success...\n    return { erm: erm, err: err };\n  }\n    ppcalcOld(risk: any, test?: boolean) {\n    console.log(JSON.stringify(risk));\n    let physiology = 0;\n    let operative = 0;\n    if (test) {\n      physiology =\n        risk.age +\n        risk.cardiac +\n        risk.respiratory +\n        risk.ecg +\n        risk.bp +\n        risk.pulse +\n        risk.gcs +\n        risk.hb +\n        risk.wcc +\n        risk.urea +\n        risk.sodium +\n        risk.potassium;\n      operative =\n        risk.severity +\n        risk.number +\n        risk.blood +\n        risk.soiling +\n        risk.cancer +\n        risk.cepod;\n    } else {\n      physiology =\n        parseInt(risk.age, 10) +\n        parseInt(risk.cardiac, 10) +\n        parseInt(risk.respiratory, 10) +\n        parseInt(risk.ecg, 10) +\n        parseInt(risk.bp, 10) +\n        parseInt(risk.pulse, 10) +\n        parseInt(risk.gcs, 10) +\n        parseInt(risk.hb, 10) +\n        parseInt(risk.wcc, 10) +\n        parseInt(risk.urea, 10) +\n        parseInt(risk.sodium, 10) +\n        parseInt(risk.potassium, 10);\n      operative =\n        parseInt(risk.severity, 10) +\n        parseInt(risk.number, 10) +\n        parseInt(risk.blood, 10) +\n        parseInt(risk.soiling, 10) +\n        parseInt(risk.cancer, 10) +\n        parseInt(risk.cepod, 10);\n    }\n\n    console.log('physiology score = ' + physiology);\n    console.log('operative score = ' + operative);\n\n    let morbidity =\n      1 / (1 + 1 / Math.exp(-5.91 + 0.16 * physiology + 0.19 * operative));\n    morbidity = Math.round(morbidity * 1000) / 10;\n    console.log('morbidity = ' + morbidity + '%');\n\n    let mortality =\n      1 / (1 + 1 / Math.exp(-9.065 + 0.1692 * physiology + 0.155 * operative));\n    mortality = Math.round(mortality * 1000) / 10;\n    console.log('mortality = ' + mortality + '%');\n    console.log('morbidity: ' + morbidity);\n    console.log('mortality: ' + mortality);\n    return { morbidity, mortality };\n  }\n  ppcalc(risk: any, test?: boolean) {\n    console.log(JSON.stringify(risk));\n    let physiology = 0;\n    let operative = 0;\n    if (test) {\n      physiology =\n        risk.age +\n        risk.cardiac +\n        risk.respiratory +\n        risk.ecg +\n        risk.bp +\n        risk.pulse +\n        risk.gcs +\n        risk.hb +\n        risk.wcc +\n        risk.urea +\n        risk.sodium +\n        risk.potassium;\n      operative =\n        risk.severity +\n        risk.number +\n        risk.blood +\n        risk.soiling +\n        risk.cancer +\n        risk.cepod;\n    } else {\n      physiology =\n        this.PPossumAge(parseInt(risk.age, 10)) +\n        parseInt(risk.cardiac, 10) +\n        parseInt(risk.respiratory, 10) +\n        parseInt(risk.ecg, 10) +\n        this.PPossumBP(parseInt(risk.bp, 10)) +\n        this.PPossumPulse(parseInt(risk.pulse, 10)) +\n        parseInt(risk.gcs, 10) +\n        parseInt(risk.hb, 10) +\n        this.PPossumWCC(parseInt(risk.wcc, 10)) +\n        this.PPossumUrea(parseInt(risk.urea, 10)) +\n        this.PPossumSodium(parseInt(risk.sodium, 10)) +\n        this.PPossumPotassium(parseInt(risk.potassium, 10));\n      operative =\n        parseInt(risk.severity, 10) +\n        parseInt(risk.number, 10) +\n        parseInt(risk.blood, 10) +\n        parseInt(risk.soiling, 10) +\n        parseInt(risk.cancer, 10) +\n        this.PPossumUrgency(parseInt(risk.cepod, 10));\n    }\n\n    console.log('physiology score = ' + physiology);\n    console.log('operative score = ' + operative);\n\n    let morbidity =\n      1 / (1 + 1 / Math.exp(-5.91 + 0.16 * physiology + 0.19 * operative));\n    morbidity = Math.round(morbidity * 1000) / 10;\n    console.log('morbidity = ' + morbidity + '%');\n\n    let mortality =\n      1 / (1 + 1 / Math.exp(-9.065 + 0.1692 * physiology + 0.155 * operative));\n    mortality = Math.round(mortality * 1000) / 10;\n    console.log('mortality = ' + mortality + '%');\n    console.log('morbidity: ' + morbidity);\n    console.log('mortality: ' + mortality);\n    return { morbidity, mortality };\n  }\n  PPossumAge(age: number) {\n    if (age < 61) {\n      return 1;\n    } else if (age >= 61 && age <= 70) {\n      return 2;\n    } else {\n      return 4;\n    }\n  }\n\n  PPossumBP(bp: number) {\n    if (bp < 90) {\n      return 8;\n    } else if (bp < 100) {\n      return 4;\n    } else if (bp < 110) {\n      return 2;\n    } else if (bp <= 130) {\n      return 1;\n    } else if (bp <= 170) {\n      return 2;\n    } else {\n      return 4;\n    }\n  }\n\n  PPossumPulse(pulse: number) {\n    if (pulse < 40) {\n      return 8;\n    } else if (pulse < 50) {\n      return 2;\n    } else if (pulse <= 80) {\n      return 1;\n    } else if (pulse <= 100) {\n      return 2;\n    } else if (pulse <= 120) {\n      return 4;\n    } else {\n      return 8;\n    }\n  }\n\n  PPossumWCC(wcc: number) {\n    if (wcc <= 3) {\n      return 4;\n    } else if (wcc <= 4) {\n      return 2;\n    } else if (wcc <= 10) {\n      return 1;\n    } else if (wcc <= 20) {\n      return 2;\n    } else {\n      return 4;\n    }\n  }\n\n  PPossumUrea(urea: number) {\n    if (urea <= 7.5) {\n      return 1;\n    } else if (urea <= 10) {\n      return 2;\n    } else if (urea <= 15) {\n      return 4;\n    } else {\n      return 8;\n    }\n  }\n\n  PPossumSodium(sodium: number) {\n    if (sodium <= 125) {\n      return 8;\n    } else if (sodium <= 130) {\n      return 4;\n    } else if (sodium <= 135) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  PPossumPotassium(potassium: number) {\n    if (potassium <= 2.8) {\n      return 8;\n    } else if (potassium <= 3.1) {\n      return 4;\n    } else if (potassium <= 3.4) {\n      return 2;\n    } else if (potassium <= 5) {\n      return 1;\n    } else if (potassium <= 5.3) {\n      return 2;\n    } else if (potassium <= 5.9) {\n      return 4;\n    } else {\n      return 8;\n    }\n  }\n\n  PPossumGCS(gcs: number) {\n    if (gcs <= 8) {\n      return 8;\n    } else if (gcs <= 11) {\n      return 4;\n    } else if (gcs <= 14) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  PPossumUrgency(urgency: number) {\n    if (urgency == 8) {\n      return 8;\n    } else {\n      return 4;\n    }\n  }\n}\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_icon","_resolveComponent","_component_ion_button","_openBlock","_createBlock","onClick","toggleDarkMode","default","_withCtx","_createVNode","icon","darkMode","moon","sunny","slot","_","defineComponent","name","components","IonButton","IonIcon","setup","themeStore","useThemeStore","computed","isDark","toggleTheme","__exports__","Calculators","ConvertNelaUrgency","urgency","harmoniseParams","risk","riskHarmonised","age","parseFloat","asa","albumin","bp","pulse","urea","gcs","respiratory","wcc","cepod","soiling","cancer","indHaemorrhage","indAbdominalWoundDehiscence","indAbdominalCompartmentSyndrome","indPlannedRelook","indOther","indTenderSmallBowelObstruction","indNonTenderSmallBowelObstruction","indTenderLargeBowelObstruction","indNonTenderLargeBowelObstruction","indGastricOutletObstruction","indIncarceratedHernia","indHiatusHernia","indVolvulus","indInternalHernia","indObstructingIncisionalHernia","indIntussusception","indPseudoObstruction","indForeignBody","indPhlegmon","indPneumoperitoneum","indSepsisOther","indIatrogenicInjury","indAnastomoticLeak","indPeritonitis","indPerforation","indAbdominalAbscess","indIntestinalFistula","indNecrosis","indIschaemia","indColitis","indAcidosis","NelaV2","coeffIntercept","coeffAge","coeffAsa3","coeffAsa4","coeffAsa5","coeffAsa3Age","coeffAsa4Age","coeffAsa5Age","coeffAlbumin","coeffPulse","coeffPulse2","coeffSystolicBP","coeffSystolicBP2","coeffUrea","coeffWBC","coeffWBC2","coeffGlasgowComaScore14","coeffGlasgowComaScore3_13","coeffMalignancyPrimary","coeffMalignancyNodalMetastases","coeffMalignancyDistantMetastases","coeffRespiratory2","coeffRespiratory3","coeffUrgency6_18Hrs","coeffUrgency2_6Hrs","coeffUrgencyUnder2hrs","coeffIndicationSepsis","coeffIndicationIschaemia","coeffIndicationBleeding","coeffSoiling","ageCent","asaCent","Math","max","albuminCent","min","pulseCent","systolicBP","ureaCent","log","wccCent","maxInd","ind_ischaemia","ind_sepsis","ind_obst","ind_bleed","eq","Age","Asa3","Asa4","Asa5","Asa3Age","Asa4Age","Asa5Age","Albumin","Pulse","Pulse2","pow","SystolicBP","SystolicBP2","Urea","WBC","WBC2","GCS14","GCS3_13","MalignancyPrimary","MalignancyNodalMetastases","MalignancyDistantMetastases","Respiratory2","Respiratory3","Urgency6_18Hrs","Urgency2_6Hrs","this","UrgencyUnder2hrs","IndicationSepsis","IndicationIschaemia","IndicationBleeding","Soiling","nelaRiskV2","console","exp","round","mortality","error","state","message","calcNELA","sanityCheck","NELADATACHECK","err","cr","parseInt","creatinine","cr1","cr2","sodium","na1","na2","b1","b2","p1","p2","w1","w2","u1","u2","potassium","k1","k2","resp","asanum","lookup","second_lookup","a1","a2","gender","cardiac","ecg","number","severity","blood","hb","section_three","erm","undefined","ppcalcOld","test","JSON","stringify","physiology","operative","morbidity","ppcalc","PPossumAge","PPossumBP","PPossumPulse","PPossumWCC","PPossumUrea","PPossumSodium","PPossumPotassium","PPossumUrgency","PPossumGCS"],"sourceRoot":""}